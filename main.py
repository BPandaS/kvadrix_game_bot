from collections import defaultdict
from random import randint
import threading, json
from telebot import TeleBot, types
from config import access_token, table_name
import keyboard, functions, db_functions, logger


# REVERAL-LINK: https://t.me/kvadrix_game_bot?start={USER-ID}
MAIN_BOT_LINK = 'https://t.me/kvadrix_game_bot'
NOW_DIALOGS = []


class User:
    def __init__(self, id=None, username=None, phone=None, privacy_accept=False, left=None, right=None, leader=None, texted_to_leader=False, expert=None, expert_confirm=False, middle=None, game=1, cur_level=1, is_eighteen=False):
        # Main user information
        self.id = id
        self.privacy_accept = privacy_accept
        self.is_eighteen = is_eighteen
        self.username = username
        self.phone = phone

        # Referal/Levels system
        self.refs_cnt = 0
        self.from_user_id = None # referal-part
        self.cur_level = cur_level
        self.levels = {
            1: 0,
            2: 0,
            3: 0,
            4: 0,
        }
        self.ref_link = None

        # Levels-Tree
        self.left = left
        self.middle = middle # For 'GAME-2'
        self.right = right
        self.leader = leader
 
        # for 'start-game' part
        self.expert = expert
        self.expert_confirm = expert_confirm

        # Check if user text to his leader
        self.texted_to_leader = texted_to_leader

        # Statistic data
        self.send_gift_sum = 0
        self.get_gift_sum = 0

        # Games
        self.game = game


class Bot:
    def __init__(self):
        # Main variables
        self.bot = TeleBot(token=access_token)
        self.REQUISITS_COUNTER = []

        # FAQ
        self.admins = [1592698823, 474253096]
        self.START_GAME_ROOT = 474253096        # self.START_GAME_ROOT = 474253096
        self.START_GAME_ROOT_PRODUCERS = []
        self.user_faq_messages = defaultdict(list)

        # Levels (7 system accounts)
        self.system_accounts = [5589463177, 1883323497, 247819864, 474253096, 1752205871,
                                'system_5589463177', 'system_1883323497', 'system_247819864', 'system_474253096', 'system_1752205871',
                                'system_1', 'system_2', 'system_3', 'system_4', 'system_5', 'system_6']
        self.system_requisits = ['–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –≠–∫—Å–ø–µ—Ä—Ç–∞:\n4276 6900 1905 7931\n–°–±–µ—Ä–±–∞–Ω–∫\n–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ –í–∞—Å–∏–ª—å–µ–≤–Ω–∞', '–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –≠–∫—Å–ø–µ—Ä—Ç–∞:\n4377 7237 6759 5170']

        # Expert start-text
        self.start_expert_text = dict()

        # Place-new user data
        self.place_new_user_lst = dict()

        self.gift_payed = {
                        1: (1, 1),
                        2: (3, 3),
                        3: (10, 10),
                        4: (30, 30),
                    }


        # Texts
        self.hello_message = 'KVŒõDRIX - –∏–≥—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É—é—â–∞—è —Å–∏—Å—Ç–µ–º—É –¥–∞—Ä–µ–Ω–∏—è –∫–∞–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ñ–æ–ø—Ä–æ–¥—É–∫—Ç–∞:\n\nüíé –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–∞—Ä—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥—É –ø–æ–¥–∞—Ä–∫–∏, –∞ –º—ã —Å–æ–∑–¥–∞—ë–º –±–æ–ª—å—à—É—é –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é –±–∞–∑—É, —Å –∫–æ—Ç–æ—Ä–æ–π –ø–æ–¥–µ–ª–∏–º—Å—è –Ω–∞—à–µ–π –ø–µ—Ä–≤–æ–π –≤–µ—Ä—Å–∏–µ–π –æ–±—É—á–∞—é—â–∏—Ö –∫—É—Ä—Å–æ–≤\n\n–î–∞-–¥–∞, —Ç—ã –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–Ω—è–ª(–∞)!üòº\n–ú—ã —Å–æ–∑–¥–∞—ë–º –ø—Ä–æ–¥—É–∫—Ç, –∞ –ø–æ—Å–ª–µ - –¥–∞—Ä–∏–º –¥–æ—Å—Ç—É–ø –≤—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º, —Å–¥–µ–ª–∞–≤—à–∏–º —Ö–æ—Ç—è –±—ã 1 –ø–æ–¥–∞—Ä–æ–∫ üéÅ\n\nKVŒõDRIX - –¢–≤–æ–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –≤ –º–∏—Ä –∏–Ω—Ñ–æ–±–∏–∑–Ω–µ—Å–∞!üîõ'

        self.base_texts = [ 
                    '1. –ö–∞–∫ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —á.1\n\n–ö–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å?ü§î\n‚§µÔ∏è –ü–µ—Ä–≤—ã–π —Ä–æ–ª–∏–∫ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞, –ø–æ—Å–≤—è—â—ë–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é —Å–ø–∏—Å–∫–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ (—Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–æ–¥–∏–º –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É!)\nhttps://youtu.be/kiULdTSE7g0', 
                    '2. –ö–∞–∫ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —á.2\n\n–ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π —Ä–∞–∑–≥—Ä—É–ø–ø–∏—Ä—É–µ–º –≤—Å–µ—Ö –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, —á—Ç–æ–±—ã —á–µ—Ç–∫–æ –ø–æ–Ω–∏–º–∞—Ç—å, —Å –∫–µ–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—åüòº\nhttps://youtu.be/eBiIAKLF8NM', 
                    '3. –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Å–æ–∑–≤–æ–Ω\n\n–°–∞–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–∞—á–∞—Ç—å –≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –æ —Å–¥–µ–ª–∫–µ - —ç—Ç–æ —Å–æ–∑–≤–æ–Ω! (–ù–µ –ø–µ—Ä–µ–ø–∏—Å–∫–∞ - —Å–æ–∑–≤–æ–Ω!)\n\n¬´–ê‚Ä¶ –ö–∞–∫ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–æ–∑–≤–æ–Ω?üò±\n–ß—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç—å?! –°—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é?? –ú–æ–∂–µ—Ç, —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥-–ø–ª–∞–Ω–µ?¬ª\n\n–°—Ç–æ–ø-—Å—Ç–æ–ø‚Ä¶ –î–∞–≤–∞–π —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è —Å–æ –≤—Å–µ–º –ø–æ—à–∞–≥–æ–≤–æ\n\n–°–º–æ—Ç—Ä–∏ —Ä–æ–ª–∏–∫ ‚§µÔ∏è\n\nhttps://youtu.be/MmsJWQshqOc', 
                    '4. –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è\n\n–û—Ç–ª–∏—á–Ω–æ!) –¢—ã –¥–æ—à—ë–ª –¥–æ —ç—Ç–∞–ø–∞, –∫–æ–≥–¥–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä (–∑–∞–ø–æ–º–Ω–∏, –¥–∞–ª–µ–µ - –ü–ü) —Å–æ–≥–ª–∞—Å–∏–ª—Å—è —Å–æ–∑–≤–æ–Ω–∏—Ç—å—Å—è –∏ –ø–æ–æ–±—â–∞—Ç—å—Å—è –æ —Ç–≤–æ–µ–π –∏–¥–µ–µüôè\n\n–¢–µ–ø–µ—Ä—å —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–∞\n\n–°–º–æ—Ç—Ä–∏, –∫–∞–∫ —ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å ‚§µÔ∏è\n\nhttps://youtu.be/xko5EnZb_qk', 
                    '5. –¢—Ä–∏–≥–≥–µ—Ä—ã\n\n–¢—Ä–∏–≥–≥–µ—Ä - –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Å—ã–ª, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ –ø–æ–¥–≤–æ–¥–∏—Ç—å –ü–ü –∫ —Å–¥–µ–ª–∫–µ ü§ù\n\n–°–º–æ—Ç—Ä–∏, –∫–∞–∫–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –ø—Ä–æ–¥–∞–∂ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –∏ –∫–∞–∫ —Ç—ã –º–æ–∂–µ—à—å –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ‚§µÔ∏è\n\nhttps://youtu.be/t5JTyx7RkR8', 
                    '6. –ü—Ä–æ–¥–∞–∂–∞\n\n–û–°–¢–ê–õ–û–°–¨ –õ–ò–®–¨‚Ä¶ –ü–†–û–î–ê–¢–¨üî•\n\n–¢–æ –µ—Å—Ç—å - –∑–∞–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –ü–ü –≤ —Å–∏—Å—Ç–µ–º—Éüòé\n\n–ß—Ç–æ —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç –≤ —ç—Ç–æ–º ‚§µÔ∏è\n\nhttps://youtu.be/ctiJxDl-FPk', 
                    '7. –û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π\n\nüõ°–í–æ–∑—Ä–∞–∂–µ–Ω–∏—è‚Ä¶–ö—É–¥–∞ –∂–µ –±–µ–∑ –Ω–∏—Ö‚Ä¶)\n\n–ù–æ, —ç—Ç–æ –Ω–µ —Ç–∞–∫ —Å—Ç—Ä–∞—à–Ω–æ, –∫–∞–∫ –∑–≤—É—á–∏—Ç, –µ—Å–ª–∏ —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Ö –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å ‚öîÔ∏è\n\n–°–º–æ—Ç—Ä–∏ —Ä–æ–ª–∏–∫ ‚§µÔ∏è (—á.1)\n\nhttps://youtu.be/5blaUa26HFU', 
                    '8. –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –ü–ü –æ—Ç–∫–∞–∑–∞–ª—Å—è\n\n‚ùå –û–¢–ö–ê–ó ‚ùå\n\n¬´–≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ –æ—Ç–∫–∞–∑–∞–ª—Å—è, –∑–Ω–∞—á–∏—Ç, —è –±—É–¥—É —Å–ø–∞–º–∏—Ç—å –∏ —É–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å –µ–≥–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —á—Ç–æ–±—ã –æ–Ω –æ–¥—É–º–∞–ª—Å—è!¬ª\n\n- –¢—ã —Ä–∞—Å—Å—É–∂–¥–∞–µ—à—å —Ç–∞–∫ –∂–µ?)\n\n‚§µÔ∏è –°–º–æ—Ç—Ä–∏, –∫–∞–∫ –æ—Å—Ç–∞–≤–∏—Ç—å –ü–ü –≤ —Å–ø–∏—Å–∫–µ –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ—Ç–∫–∞–∑–∞, –ø—Ä–∏ —ç—Ç–æ–º, –¥–µ–π—Å—Ç–≤—É—è —ç—Ç–∏—á–Ω–æ –∏ –Ω–µ —Ä–∞–∑—Ä—É—à–∞—è –≤–∑–∞–∏–º–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è;)\nhttps://youtu.be/OjgNZNGUHKA', 
                    '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è!üî•\n\n–¢—ã –ø—Ä–æ—à—ë–ª –ë–∞–∑—É –ó–Ω–∞–Ω–∏–π, –ø—Ä–∏–º–µ–Ω—è–π –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ, –æ–±—É—á–∞–π —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É, –∏ —Ç—ã –±—É–¥–µ—à—å –æ–±—Ä–µ—á—ë–Ω –Ω–∞ —É—Å–ø–µ—Ö üôå‚ú®' 
                ]

        # All users
        self.users = [
            # User(5589463177, 'system_1', '-', True, texted_to_leader=True, expert_confirm=True, leader='system_1', game=3, cur_level=1, left='system_2', right='system_3', is_eighteen=True),
            # User(5589463177, 'system_2', '-', True, texted_to_leader=True, expert_confirm=True, leader='system_1', game=3, cur_level=1, left='system_4', right='system_5', is_eighteen=True),
            # User(5589463177, 'system_3', '-', True, texted_to_leader=True, expert_confirm=True, leader='system_1', game=3, cur_level=1, left='system_6', is_eighteen=True),
            # User(5589463177, 'system_4', '-', True, texted_to_leader=True, expert_confirm=True, leader='system_2', game=3, cur_level=1, is_eighteen=True),
            # User(5589463177, 'system_5', '-', True, texted_to_leader=True, expert_confirm=True, leader='system_2', game=3, cur_level=1, is_eighteen=True),
            # User(5589463177, 'system_6', '-', True, texted_to_leader=True, expert_confirm=True, leader='system_3', game=3, cur_level=1, is_eighteen=True),            

            User(1883323497, 'system_1883323497', privacy_accept=True, texted_to_leader=True, expert_confirm=True, leader='system_1883323497', game=1, cur_level=1, is_eighteen=True),
            User(247819864, 'system_247819864', privacy_accept=True, texted_to_leader=True, expert_confirm=True, leader='system_247819864', game=1, cur_level=2, is_eighteen=True),
            User(474253096, 'system_474253096', privacy_accept=True, texted_to_leader=True, expert_confirm=True, leader='system_474253096', game=1, cur_level=3, is_eighteen=True),
            User(1752205871, 'system_1752205871', privacy_accept=True, texted_to_leader=True, expert_confirm=True, leader='system_1752205871', game=1, cur_level=4, is_eighteen=True),
            User(5589463177, 'system_5589463177', privacy_accept=True, texted_to_leader=True, expert_confirm=True, leader='system_5589463177', game=3, cur_level=1, is_eighteen=True),

            #User(5589463177, 'system_5', '-', True, texted_to_leader=True, expert_confirm=True, leader='system_247819864', game=1),
            #User(5589463177, 'system_6', '-', True, texted_to_leader=True, expert_confirm=True, leader='system_247819864', game=1),
        ]

    

    def user_exists(self, id=None, username=None):
        if type(id) == str:
            username = id
            id = None
        if id is None:
            for user in self.users:
                if user.username == username:
                    return user
        else:
            for user in self.users:
                if user.id == id:
                    return user
        return False


    def faq_msgs_exist(self):
        for user_id in self.user_faq_messages:
            if len(self.user_faq_messages[user_id]) != 0:
                return True
        return False
    

    def place_new_user(self, new_user, from_user=None, nearest=None):
        if new_user.leader is not None:
            return
        
        if not nearest:
            if new_user.game == 1 or new_user.game == 3:
                # GAME-1 or START
                tmp_lst = []
                for root in self.place_new_user_lst[new_user.id]:
                    if root.left is None and root.right is None:
                        root.left = new_user.id
                        if root.id in self.system_accounts:
                            new_user.leader = root.username
                        else:
                            new_user.leader = root.id
                        return
                    elif root.right is None:
                        root.right = new_user.id
                        if root.id in self.system_accounts:
                            new_user.leader = root.username
                        else:
                            new_user.leader = root.id
                        return
                    tmp_lst.append(self.user_exists(id=root.left))
                    tmp_lst.append(self.user_exists(id=root.right))
                
                # Pop fst elem
                self.place_new_user_lst[new_user.id].pop(0)
                self.place_new_user_lst[new_user.id] += tmp_lst
                self.place_new_user(new_user, from_user, nearest)
            elif new_user.game == 2:
                # GAME-2
                tmp_lst = []
                for root in self.place_new_user_lst[new_user.id]:
                    if root.left is None and root.right is None and root.middle is None:
                        root.left = new_user.id
                        if root.id in self.system_accounts:
                            new_user.leader = root.username
                        else:
                            new_user.leader = root.id
                        return
                    elif root.middle is None:
                        root.middle = new_user.id
                        if root.id in self.system_accounts:
                            new_user.leader = root.username
                        else:
                            new_user.leader = root.id
                        return
                    elif root.right is None:
                        root.right = new_user.id
                        if root.id in self.system_accounts:
                            new_user.leader = root.username
                        else:
                            new_user.leader = root.id
                        return
                    tmp_lst.append(self.user_exists(id=root.left))
                    tmp_lst.append(self.user_exists(id=root.middle))
                    tmp_lst.append(self.user_exists(id=root.right))

                # Pop fst elem
                self.place_new_user_lst[new_user.id].pop(0)
                self.place_new_user_lst[new_user.id] += tmp_lst
                self.place_new_user(new_user, from_user, nearest)
        else:
            if new_user.game == 1 or new_user.game == 3:
                # GAME-1 or START
                tmp_lst = []
                for root in self.place_new_user_lst[new_user.id]:
                    if root.left is None and root.right is None:
                        # Choose random number (left || right)
                        random_user_num = randint(1, 2)

                        if random_user_num == 1:
                            root.left = new_user.id
                        else:
                            root.right = new_user.id
                        
                        if root.id in self.system_accounts:
                            new_user.leader = root.username
                        else:
                            new_user.leader = root.id
                        return
                    elif root.right is None:
                        root.right = new_user.id
                        if root.id in self.system_accounts:
                            new_user.leader = root.username
                        else:
                            new_user.leader = root.id
                        return
                    tmp_lst.append(self.user_exists(id=root.left))
                    tmp_lst.append(self.user_exists(id=root.right))
                
                # Pop fst elem
                self.place_new_user_lst[new_user.id].pop(0)
                self.place_new_user_lst[new_user.id] += tmp_lst
                self.place_new_user(new_user, from_user, nearest)
            elif new_user.game == 2:
                # GAME-2
                tmp_lst = []
                for root in self.place_new_user_lst[new_user.id]:
                    if root.left is None and root.right is None and root.middle is None:  
                        # Choose random number (left || right)
                        random_user_num = randint(1, 3)

                        if random_user_num == 1:
                            root.left = new_user.id
                        elif random_user_num == 2:
                            root.middle = new_user.id
                        else:
                            root.right = new_user.id
                        
                        if root.id in self.system_accounts:
                            new_user.leader = root.username
                        else:
                            new_user.leader = root.id
                        return
                    elif root.middle is None:
                        root.middle = new_user.id
                        if root.id in self.system_accounts:
                            new_user.leader = root.username
                        else:
                            new_user.leader = root.id
                        return
                    elif root.right is None:
                        root.right = new_user.id
                        if root.id in self.system_accounts:
                            new_user.leader = root.username
                        else:
                            new_user.leader = root.id
                        return
                    tmp_lst.append(self.user_exists(id=root.left))
                    tmp_lst.append(self.user_exists(id=root.middle))
                    tmp_lst.append(self.user_exists(id=root.right))

                # Pop fst elem
                self.place_new_user_lst[new_user.id].pop(0)
                self.place_new_user_lst[new_user.id] += tmp_lst
                self.place_new_user(new_user, from_user, nearest)
            
    
    def get_levels_player_cnt(self):
        res = defaultdict(int)
        for user in self.users:
            res[user.cur_level] += 1
        return res
    

    def get_command_players_cnt(self, root_user):
        try:
            if root_user.game == 1 or root_user.game == 3:
                # GAME-1 or START
                left_user, right_user = self.user_exists(id=root_user.left), self.user_exists(id=root_user.right)
                if (not left_user) and (not right_user):
                    return 1
                return self.get_command_players_cnt(root_user=left_user) + self.get_command_players_cnt(root_user=right_user)
            elif root_user.game == 2:
                # GAME-2
                left_user, middle_user, right_user = self.user_exists(id=root_user.left), self.user_exists(id=root_user.middle), self.user_exists(id=root_user.right)
                if (not left_user) and (not middle_user) and (not right_user):
                    return 1
                return self.get_command_players_cnt(root_user=left_user) + self.get_command_players_cnt(root_user=middle_user) + self.get_command_players_cnt(root_user=right_user)
        except:
            return -1
    

    def load_from_db(bot):
        try:
            data = db_functions.get_from_base(table_name)

            if len(data) == 0:
                return

            bot.REQUISITS_COUNTER = data['REQUISITS_COUNTER']

            bot.user_faq_messages = defaultdict(list)
            for key in data['user_faq_messages']:
                bot.user_faq_messages[int(key)] = data['user_faq_messages'][key]
                for i in range(len(bot.user_faq_messages[int(key)])):
                    bot.user_faq_messages[int(key)][i][0][0] = int(bot.user_faq_messages[int(key)][i][0][0])
            
            tmp_dict = {}
            for key in data['start_expert_text']:
                tmp_dict[int(key)] = data['start_expert_text'][key]
            bot.start_expert_text = tmp_dict

            bot.users = data['users']

            users_list = list()
            for one in bot.users:
                if 'id' not in one:
                    continue

                # Other params
                refs_cnt = int(one['refs_cnt'])
                from_user_id = one['from_user_id']
                send_gift_sum = int(one['send_gift_sum'])
                get_gift_sum = int(one['get_gift_sum'])
                levels = one['levels']
                ref_link=one['ref_link']

                one = User(id=one['id'], 
                            privacy_accept=one['privacy_accept'],
                            is_eighteen=one['is_eighteen'],
                            username=one['username'],
                            phone=one['phone'],
                            cur_level=int(one['cur_level']), 
                            left=one['left'],
                            middle=one['middle'],
                            right=one['right'],
                            leader=one['leader'],
                            expert=one['expert'],
                            expert_confirm=one['expert_confirm'],
                            texted_to_leader=one['texted_to_leader'])

                one.refs_cnt = refs_cnt
                one.from_user_id = from_user_id
                one.send_gift_sum = send_gift_sum
                one.get_gift_sum = get_gift_sum
                one.levels = levels
                one.ref_link = ref_link

                if one.leader not in bot.system_accounts and one.leader != None:
                    one.leader = int(one.leader)
                if one.expert not in bot.system_accounts and one.expert != None:
                    one.expert = int(one.expert)
                if one.id not in bot.system_accounts:
                    one.id = int(one.id)
                if one.left not in bot.system_accounts and one.left != None:
                    one.left = int(one.left)
                if one.middle not in bot.system_accounts and one.middle != None:
                    one.middle = int(one.middle)
                if one.right not in bot.system_accounts and one.right != None:
                    one.right = int(one.right)


                # Levels
                tmp_dict = {}
                for key in one.levels:
                    tmp_dict[int(key)] = int(one.levels[key])
                one.levels = tmp_dict

                users_list.append(one)
            bot.users = users_list
        except Exception as e:
            print(e)


    def start(self):
        # self.load_from_db()

        @self.bot.message_handler(commands=['get_logs'])
        def get_logs(message):
            if message.chat.id in self.admins:
                file = open('test.log', 'rb')
                try:
                    self.bot.send_document(chat_id=message.chat.id,
                                        document=file)
                except:
                    pass
                file.close()
                file = open('info.log', 'rb')
                try:
                    self.bot.send_document(chat_id=message.chat.id,
                                        document=file)
                except:
                    pass
                file.close()
                file = open('error.log', 'rb')
                try:
                    self.bot.send_document(chat_id=message.chat.id,
                                        document=file)
                except:
                    pass
                file.close()
                file = open('debug.log', 'rb')
                try:
                    self.bot.send_document(chat_id=message.chat.id,
                                        document=file)
                except:
                    pass
                file.close()

        @self.bot.message_handler(commands=['start'])
        def start_msg(message):
            # If not registered user
            if not self.user_exists(id=message.chat.id):
                self.users.append(User(id=message.chat.id))

            # Reveral-link part
            from_user_id = message.text.split(' ')
            cur_user = self.user_exists(id=message.chat.id)

            # Add username
            if cur_user.username is None:
                cur_user.username = message.from_user.username

            if len(from_user_id) != 1:
                try:
                    from_user_id = int(from_user_id[1])
                except:
                    from_user_id = from_user_id[1]
                from_user = self.user_exists(id=from_user_id)
                from_user.refs_cnt += 1
                if from_user.id in self.system_accounts:
                    cur_user.from_user_id = from_user.username
                else:
                    cur_user.from_user_id = from_user.id
                cur_user.cur_level = from_user.cur_level 

            if not cur_user.is_eighteen:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                        text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –í–∞–º –µ—Å—Ç—å 18 –ª–µ—Ç:',
                                        reply_markup=keyboard.yes_no())
                    
                self.bot.register_next_step_handler(msg, is_eighteen)
            elif not cur_user.privacy_accept:
                self.bot.send_message(chat_id=message.chat.id,
                                                text='–ü–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ ‚§µÔ∏è\nhttps://telegra.ph/Polzovatelskoe-soglashenie-i-politika-konfidencialnosti-08-20',
                                                reply_markup=keyboard.privacy_accept())
            else:
                with open('images/main_menu_img.jpg', 'rb') as file:
                    main_menu_photo = file.read()
                self.bot.send_photo(chat_id=message.chat.id,
                                    photo=main_menu_photo,
                                    caption=
                                    """–†–∞–¥ —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å!\n\n–¢—ã —É–∂–µ —Å–ª—ã—à–∞–ª, —á—Ç–æ –º—ã –∑–∞–ø—É—Å–∫–∞–µ–º
–Ω–æ–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –ø–æ—Å–≤—è—â—ë–Ω–Ω–æ–µ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–º—É —Ä–æ—Å—Ç—É –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—é?!\n
–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å, –ø–æ–∫–∞ –º—ã –≥–æ—Ç–æ–≤–∏–º –Ω–∞—à –ø—Ä–æ–¥—É–∫—Ç, —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–æ–º–æ
–≤–µ—Ä—Å–∏—é, —Å–≤—è–∑–∞–≤—à–∏—Å—å —Å–æ —Å–≤–æ–∏–º –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª–µ–º, –∞ –ø–æ—Å–ª–µ - –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –≤
—á–∏—Å–ª–µ –ø–µ—Ä–≤—ã—ÖüöÄ!""",
                                    reply_markup=keyboard.menu(self, message.chat.id))
            
            # SAVE
            db_functions.save_all(self)
        

# Callback query handler --------------------------------------------------------------------------

        @self.bot.callback_query_handler(func=lambda x: True)
        def callback_handler(call):
            # Split data for PREFIX and DATA
            prefix, data = call.data.split('|')
            
            # Check if None-call
            if prefix is None:
                self.bot.answer_callback_query(callback_query_id=call.id)

            # If not registered user
            if not self.user_exists(id=call.message.chat.id):
                self.bot.answer_callback_query(callback_query_id=call.id,
                                                text='–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã!')
                return

            if prefix == 'privacy':
                if data == 'deny':
                    self.bot.delete_message(chat_id=call.message.chat.id,
                                            message_id=call.message.id)
                    self.bot.send_message(chat_id=call.message.chat.id,
                                        text='–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!',
                                        reply_markup=keyboard.none())
                elif data == 'accept':
                    cur_user = self.user_exists(id=call.message.chat.id)
                    cur_user.privacy_accept = True

                    self.bot.delete_message(chat_id=call.message.chat.id,
                                            message_id=call.message.id)
                    
                    msg = self.bot.send_message(chat_id=call.message.chat.id,
                                        text='–ò–≥—Ä–æ–∫, –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ '
                                        'üìá (–æ–±–µ—â–∞–µ–º, —á—Ç–æ —Ç—Ä–µ–≤–æ–∂–∏—Ç—å –Ω–µ –±—É–¥–µ–º) ',
                                        reply_markup=keyboard.get_user_data())
                    
                    self.bot.register_next_step_handler(msg, request_contacts)
                
            elif prefix == 'text_to_leader':
                cur_user = self.user_exists(id=call.message.chat.id)
                leader = self.user_exists(id=self.user_exists(id=cur_user.leader).leader)

                self.bot.edit_message_reply_markup(chat_id=call.message.chat.id,
                                                message_id=call.message.id,
                                                reply_markup=keyboard.text_to_leader(leader.id, clicked=True))

                # Level-info
                if cur_user.game == 1 or cur_user.game == 2:
                    # GAME-1 or GAME-2
                    self.bot.send_message(chat_id=cur_user.id,
                                            text=f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ {cur_user.cur_level}-–º —É—Ä–æ–≤–Ω–µ –∏–≥—Ä—ã.\n–ü–æ–¥–∞—Ä–æ–∫ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É - {self.gift_payed[cur_user.cur_level][0] * 1000} ‚ÇΩ')
                elif cur_user.game == 3:
                    # START
                    self.bot.send_message(chat_id=cur_user.id,
                                            text=f'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ {cur_user.cur_level}-–º —É—Ä–æ–≤–Ω–µ –∏–≥—Ä—ã.\n–ü–æ–¥–∞—Ä–æ–∫ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É - 500 ‚ÇΩ')

                # Start expert text
                if leader.id in self.system_accounts:
                    sent_requisits = self.system_requisits[randint(0, 1)]
                    self.bot.send_message(chat_id=cur_user.id,
                                        text=sent_requisits)
                    self.REQUISITS_COUNTER.append(sent_requisits)
                elif leader.id in self.start_expert_text:
                    self.bot.send_message(chat_id=cur_user.id,
                                        text=self.start_expert_text[leader.id])

                # For expert
                msg_leader = self.bot.send_message(chat_id=leader.id,
                                                text=f'–í—ã –±—ã–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –≤ –¥–∏–∞–ª–æ–≥ —Å @{cur_user.username}.\n'
                                                '–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:',
                                                reply_markup=keyboard.end_dialog(self, 'leader'))
                # For client
                msg_client = self.bot.send_message(chat_id=call.message.chat.id,
                                    text=f'–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –¥–∏–∞–ª–æ–≥ —Å @{leader.username}.\n–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:',
                                    reply_markup=keyboard.end_dialog(self, 'client'))

                self.bot.register_next_step_handler(msg_leader, expert_dialog, msg_client, msg_leader)
                self.bot.register_next_step_handler(msg_client, expert_dialog, msg_client, msg_leader)
            # elif prefix == 'yes_no_text_to_leader':
            #     cur_user = self.user_exists(id=call.message.chat.id)
            #     if data == 'yes':
            #         msg = self.bot.send_message(chat_id=call.message.chat.id,
            #                         text='–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —ç–∫—Å–ø–µ—Ä—Ç–∞:',
            #                         reply_markup=keyboard.none())
            #         self.bot.register_next_step_handler(msg, start_expert_text)
            #     else:
            #         self.bot.edit_message_reply_markup(chat_id=call.message.chat.id,
            #                                         message_id=call.message.id,
            #                                         reply_markup=keyboard.text_to_leader(cur_user.leader, False))
            #         self.bot.answer_callback_query(call.id)
            elif prefix == 'text_to_leader_success':
                user_id = int(data.split()[0])
                client = self.user_exists(id=user_id)
                expert = self.user_exists(id=self.user_exists(id=client.leader).leader)

                self.bot.clear_step_handler_by_chat_id(client.id)
                self.bot.clear_step_handler_by_chat_id(expert.id)

                msg = self.bot.send_message(chat_id=call.message.chat.id,
                                    text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –í–∞—à–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                                    reply_markup=keyboard.yes_no())

                self.bot.register_next_step_handler(msg, text_to_leader_success_verify, data)
            elif prefix == 'get_referal_link':
                ref_link = MAIN_BOT_LINK + f'?start={data}'
                cur_user = self.user_exists(id=call.message.chat.id)
                cur_user.ref_link = ref_link
                self.bot.edit_message_caption(chat_id=call.message.chat.id,
                                        message_id=call.message.id,
                                        caption=f'–í–∞—à–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ –≥–æ—Ç–æ–≤–∞ ‚úÖ\n\n{ref_link}')
            elif prefix == 'answer_faq':
                msg = self.bot.send_message(chat_id=call.message.chat.id,
                                    text='–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:',
                                    reply_markup=keyboard.back())
                self.bot.register_next_step_handler(msg, faq_answer, int(data.split()[0]), int(data.split()[1]))
                self.bot.answer_callback_query(call.id)
            elif prefix == 'know_base_test_done':
                is_done, test_num = data.split()
                if is_done == 'False':
                    self.bot.edit_message_reply_markup(chat_id=call.message.chat.id,
                                                    message_id=call.message.id,
                                                    reply_markup=keyboard.know_base_test(True, data.split()[1], len(self.base_texts)))
                    if int(test_num) == len(self.base_texts) - 1:
                        with open('images/main_menu_img.jpg', 'rb') as file:
                            main_menu_photo = file.read()
                        self.bot.send_photo(chat_id=call.message.chat.id,
                                        photo=main_menu_photo,
                                        caption=self.hello_message,
                                        reply_markup=keyboard.menu(self, call.message.chat.id))
                        self.bot.clear_step_handler_by_chat_id(call.message.chat.id)
                self.bot.answer_callback_query(call.id)
            elif prefix == 'know_base_next':
                is_done, test_num = data.split()
                if is_done == 'True':
                    is_done = True
                else:
                    is_done = False
                test_num = int(test_num)
                if not is_done:
                    self.bot.answer_callback_query(callback_query_id=call.id,
                                        text='–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å —É—Ä–æ–∫–æ–º, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –ì–æ—Ç–æ–≤–æ!',
                                        show_alert=True)
                    return
                else:
                    test_num += 1

                if len(self.base_texts) <= test_num:
                    with open('images/main_menu_img.jpg', 'rb') as file:
                        main_menu_photo = file.read()
                    self.bot.send_photo(chat_id=call.message.chat.id,
                                    photo=main_menu_photo,
                                    caption=self.hello_message,
                                    reply_markup=keyboard.menu(self, call.message.chat.id))
                else:
                    self.bot.send_message(chat_id=call.message.chat.id,
                                            text=self.base_texts[test_num],
                                            reply_markup=keyboard.know_base_test(False, test_num, len(self.base_texts)))
                    self.bot.answer_callback_query(call.id) 
            elif prefix == 'team_control_delete':
                try:
                    producer_id = int(data) 
                except:
                    producer_id = data
                cur_user = self.user_exists(id=call.message.chat.id)
                if cur_user.left == producer_id:
                    cur_user.left = None
                elif cur_user.right == producer_id:
                    cur_user.right = None

                self.bot.edit_message_reply_markup(chat_id=call.message.chat.id,
                                                message_id=call.message.id,
                                                reply_markup=keyboard.team_control(self, call.message.chat.id))
            elif prefix == 'about_game':
                self.bot.answer_callback_query(call.id)
                self.bot.clear_step_handler_by_chat_id(call.message.chat.id)
                if data == 'presentations':
                    with open('images/presentation_img.jpg', 'rb') as file:
                        presentation_photo = file.read()
                    self.bot.edit_message_media(chat_id=call.message.chat.id,
                                        message_id=call.message.id,
                                        media=types.InputMedia(type='photo', media=presentation_photo, caption='–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ '
                                        '–∏–∑—É—á–∏ –Ω–∞—à—É –∏–≥—Ä—É, –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è —Ç–µ–±—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –ø—Ä–µ–∑–µ–Ω—Ç–µ–Ω—Ç–∞—Ü–∏–∏üìÄüíøüíæ\n'
                                        'https://telegra.ph/Prezentaciya-KV%CE%9BDRIX-08-21'),
                                        reply_markup=keyboard.back_about_game())
                elif data == 'status':
                    with open('images/status_img.jpg', 'rb') as file:
                        status_photo = file.read()
                    self.bot.edit_message_media(chat_id=call.message.chat.id,
                                        message_id=call.message.id,
                                        media=types.InputMedia(type='photo', media=status_photo, caption='–ü–æ –º–µ—Ä–µ –∏–≥—Ä—ã, —Ç—ã –±—É–¥–µ—à—å –ø–µ—Ä–µ–º–µ—â–∞—Ç—å—Å—è –ø–æ —É—Ä–æ–≤–Ω—è–º, –∑–∞–Ω–∏–º–∞—è —Ä–∞–∑–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ ‚§µÔ∏è\n\n'
                                        '‚ö´Ô∏è –ö–ª–∏–µ–Ω—Ç - –¥–∞—Ä–∏—Ç –ø–æ–¥–∞—Ä–æ–∫ –≠–∫—Å–ø–µ—Ä—Ç—É (–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞—Ä–∏—Ç '
                                        '—Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞)\n\n‚ö´Ô∏è –ü—Ä–æ–¥—é—Å–µ—Ä - –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –¥–≤—É—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã '
                                        '–æ—Ç–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å —Å–≤–æ–µ–≥–æ –≠–∫—Å–ø–µ—Ä—Ç–∞ üôè\n\n‚ö´Ô∏è –≠–∫—Å–ø–µ—Ä—Ç - –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤\n\n\n'
                                        '–ü—Ä–æ–π–¥–∏ –≤–µ—Å—å –ø—É—Ç—å –∏ –ø–æ—á—É–≤—Å—Ç–≤—É–π —Å–µ–±—è –≤ –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏, –∞ –º—ã - –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ –≤ —ç—Ç–æ–º ;)'),
                                        reply_markup=keyboard.back_about_game())
                elif data == 'levels':
                    with open('images/levels_img.jpg', 'rb') as file:
                        levels_photo = file.read()
                    self.bot.edit_message_media(chat_id=call.message.chat.id,
                                        message_id=call.message.id,
                                        media=types.InputMedia(type='photo', media=levels_photo, caption='–£—Ä–æ–≤–Ω–∏:\n\n '

                                            '‚öúÔ∏è –ù–∞ –≤—ã–±–æ—Ä 2 –∏–≥—Ä—ã (–∏ –ø–æ 4 —É—Ä–æ–≤–Ω—è –≤ –∫–∞–∂–¥–æ–π):\n\n '

                                            '‚ö´Ô∏è GAME 1 (2 –ª–∏—á–Ω—ã—Ö –∏ 4 –≤–æ –≤—Ç–æ—Ä–æ–π –ª–∏–Ω–∏–∏)\n\n '

                                            'üìçLVL1: 1–∫(–ø–æ–¥–∞—Ä–∏–ª) - 4–∫(–ø–æ–ª—É—á–∏–ª) üéÅ\n '
                                            'üìç LVL2: 3–∫ - 12–∫\n '
                                            'üìç LVL3: 10–∫ - 40–∫\n '
                                            'üìç LVL4: 30–∫ - 120–∫\n\n '

                                            '‚ö´Ô∏è GAME 2 (3 –ª–∏—á–Ω—ã—Ö –∏ 9 –≤–æ –≤—Ç–æ—Ä–æ–π –ª–∏–Ω–∏–∏)\n\n '

                                            'üìç LVL1: 1–∫(–ø–æ–¥–∞—Ä–∏–ª) - 9–∫(–ø–æ–ª—É—á–∏–ª)üéÅ\n '
                                            'üìç LVL2: 5–∫ - 45–∫\n '
                                            'üìç LVL3: 30–∫ - 270–∫\n '
                                            'üìç LVL4: 100–∫ - 900–∫\n\n '

                                            '–ú–æ–∂–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ–±–æ–∏—Ö GAMES –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æüòéüî•'),
                                        reply_markup=keyboard.back_about_game())
                elif data == 'rules':
                    with open('images/rules_img.jpg', 'rb') as file:
                        rules_photo = file.read()
                    self.bot.edit_message_media(chat_id=call.message.chat.id,
                                        message_id=call.message.id,
                                        media=types.InputMedia(type='photo', media=rules_photo, caption='–ö–∞–∫ –∏–≥—Ä–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –ø—Ä–∞–≤–∏–ª?ü§î\n\n–î–∞–≤–∞–π —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è!\n\n'
                                            'üíé –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–≤—è–∂–∏—Å—å —Å –≠–∫—Å–ø–µ—Ä—Ç–æ–º –∏ —Å–¥–µ–ª–∞–π –µ–º—É –ø–æ–¥–∞—Ä–æ–∫ (—Å–≤—è–∑–∞—Ç—å—Å—è '
                                            '—Å –Ω–∏–º –º–æ–∂–Ω–æ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ ¬´–ù–∞—á–∞—Ç—å/–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É¬ª)\n\n'
                                            '‚Ü™Ô∏è–ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—à—å –ø–æ–¥–∞—Ä–æ–∫, —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è –∫–ª–∏–µ–Ω—Ç–æ–º (–∏ —Å—Ä–∞–∑—É '
                                            '–ø–æ–ø–∞–¥–∞–µ—à—å –≤ white-–ª–∏—Å—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞)\n\n'
                                            '‚Ü™Ô∏è–í–º–µ—Å—Ç–µ —Å —ç—Ç–∏–º, —Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–Ω–∏–º–∞–µ—à—å —Ä–æ–ª—å –ø—Ä–æ–¥—é—Å–µ—Ä–∞ –∏ '
                                            '—Å—Ä–∞–∑—É –ø–æ–ª—É—á–∞–µ—à—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤\n\n'
                                            '‚Ü™Ô∏è–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤ —Ç–≤–æ–µ–π –∫–æ–º–∞–Ω–¥–µ –ø–æ—è–≤–∏—Ç—Å—è –ø–µ—Ä–≤—ã–π –∫–ª–∏–µ–Ω—Ç, —Ç—ã '
                                            '–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è —ç–∫—Å–ø–µ—Ä—Ç–æ–º –∏ –Ω–∞—á–∏–Ω–∞–µ—à—å –ø–æ–ª—É—á–∞—Ç—å '
                                            '–ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∏–≥–ª–∞—Å—è—Ç —Ç–≤–æ–∏ –ø—Ä–æ–¥—é—Å–µ—Ä—ã ü•≥'),
                                        reply_markup=keyboard.back_about_game())
                elif data == 'back':
                    with open('images/aboutgame_img.jpg', 'rb') as file:
                        about_game_photo = file.read()
                    self.bot.edit_message_media(chat_id=call.message.chat.id,
                                        message_id=call.message.id,
                                        media=types.InputMedia(type='photo', media=about_game_photo, caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:'),
                                        reply_markup=keyboard.about_game())
            # SAVE
            db_functions.save_all(self)


        def about_game_back(message):
            if message.text == '<< –ù–∞–∑–∞–¥':
                with open('images/main_menu_img.jpg', 'rb') as file:
                    main_menu_photo = file.read()
                self.bot.send_photo(chat_id=message.chat.id,
                                photo=main_menu_photo,
                                caption=self.hello_message,
                                reply_markup=keyboard.menu(self, message.chat.id))
                self.bot.clear_step_handler_by_chat_id(message.chat.id)
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                    text='–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!',
                                    reply_markup=keyboard.back())
                self.bot.register_next_step_handler(msg, about_game_back)
                

# -------------------------------------------------------------------------------------------------


# Next step handlers ------------------------------------------------------------------------------

        def request_contacts(message):
            cur_user = self.user_exists(id=message.chat.id)

            if message.text is not None:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                        text='–ò–≥—Ä–æ–∫, –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ '
                                        'üìá (–æ–±–µ—â–∞–µ–º, —á—Ç–æ —Ç—Ä–µ–≤–æ–∂–∏—Ç—å –Ω–µ –±—É–¥–µ–º) ',
                                        reply_markup=keyboard.get_user_data())
                self.bot.register_next_step_handler(msg, request_contacts)
                return

            try:
                cur_user.phone = message.contact.phone_number
                cur_user.username = message.from_user.username
            except:
                self.bot.send_message(chat_id=message.chat.id,
                                        text='‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - –∏–∑–º–µ–Ω–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                                        reply_markup=keyboard.username_exists())
                return

            # Check if username is exists
            if cur_user.username is None:
                self.bot.send_message(chat_id=message.chat.id,
                                        text='‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - –∏–∑–º–µ–Ω–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                                        reply_markup=keyboard.username_exists())
            else:
                self.bot.send_message(chat_id=message.chat.id,
                                        text='‚òëÔ∏è –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å',
                                        reply_markup=keyboard.none())
                
                # Games
                # msg = self.bot.send_message(chat_id=message.chat.id,
                #                     text='–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:',
                #                     reply_markup=keyboard.game_list())
                # self.bot.register_next_step_handler(msg, game_choice)

                # If user comes NOT for referal-link
                cur_user.game = 1
                msg = self.bot.send_message(chat_id=message.chat.id,
                                        text='–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å:',
                                        reply_markup=keyboard.level_choice())
                self.bot.register_next_step_handler(msg, functions.level_choice, self)
            
            # SAVE
            db_functions.save_all(self)


        def start_game(message):
            if message.text == '<< –ù–∞–∑–∞–¥':
                with open('images/main_menu_img.jpg', 'rb') as file:
                    main_menu_photo = file.read()
                self.bot.send_photo(chat_id=message.chat.id,
                                    photo=main_menu_photo,
                                    caption=self.hello_message,
                                    reply_markup=keyboard.menu(self, message.chat.id))
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                        text='–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!',
                                        reply_markup=keyboard.start_game())
                self.bot.register_next_step_handler(msg, start_game)
        

        def expert_dialog(message, user_message, expert_message):
            cur_user = self.user_exists(id=message.chat.id)

            if cur_user.id == user_message.chat.id:
                other = self.user_exists(id=expert_message.chat.id)
            else:
                other = self.user_exists(id=user_message.chat.id)

            NOW_DIALOGS.append([cur_user.id, other.id])

            # Gifts_cnt
            if message.text == 'üéÅ –ü–æ–¥–∞—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω' or message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥' and \
                ([cur_user.id, other.id] not in NOW_DIALOGS and [other.id, cur_user.id] not in NOW_DIALOGS):
                if cur_user.game == 1 or cur_user.game == 2:
                    # GAME-1 or GAME-2
                    if other.texted_to_leader:
                        other.get_gift_sum += self.gift_payed[other.cur_level][1] * 1000
                        cur_user.send_gift_sum += self.gift_payed[cur_user.cur_level][0] * 1000
                    else:
                        other.send_gift_sum += self.gift_payed[other.cur_level][0] * 1000
                        cur_user.get_gift_sum += self.gift_payed[cur_user.cur_level][1] * 1000
                elif cur_user.game == 3:
                    # START
                    if other.texted_to_leader:
                        other.get_gift_sum += 500
                        cur_user.send_gift_sum += 500
                    else:
                        other.send_gift_sum += 500
                        cur_user.get_gift_sum += 500
                
                # SAVE
                db_functions.save_all(self)
    
            if message.text == 'üéÅ –ü–æ–¥–∞—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω' or message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥':
                if other.texted_to_leader:
                    self.bot.send_message(chat_id=other.id,
                                        text='–í–∞–º –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ üéÅ',
                                        reply_markup=keyboard.text_to_leader_success(cur_user.id, other.id))
                    self.bot.send_message(chat_id=cur_user.id,
                                        text='–ü–æ–¥–∞—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ‚úÖ\n–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —ç–∫—Å–ø–µ—Ä—Ç–∞!',
                                        reply_markup=keyboard.none())
                else:
                    self.bot.send_message(chat_id=other.id,
                                        text='–≠–∫—Å–ø–µ—Ä—Ç –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥.\n–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —ç–∫—Å–ø–µ—Ä—Ç–∞!',
                                        reply_markup=keyboard.none())
                    self.bot.send_message(chat_id=cur_user.id,
                                        text='–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –¥–∏–∞–ª–æ–≥',
                                        reply_markup=keyboard.text_to_leader_success(other.id, cur_user.id))
            else:
                if expert_message.chat.id == other.id:
                    self.bot.send_message(chat_id=other.id,
                                        text=f'<b>@{cur_user.username}:</b> ' + message.text,
                                        parse_mode='HTML',
                                        reply_markup=keyboard.end_dialog(self, 'leader'))
                else:
                    self.bot.send_message(chat_id=other.id,
                                        text=f'<b>@{cur_user.username}:</b> ' + message.text,
                                        parse_mode='HTML',
                                        reply_markup=keyboard.end_dialog(self, 'client'))
                
            self.bot.clear_step_handler_by_chat_id(other.id)
            self.bot.clear_step_handler_by_chat_id(message.chat.id)

            self.bot.register_next_step_handler_by_chat_id(user_message.chat.id, expert_dialog, user_message, expert_message)
            self.bot.register_next_step_handler_by_chat_id(expert_message.chat.id, expert_dialog, user_message, expert_message)


        def faq(message):
            if message.text == '<< –ù–∞–∑–∞–¥':
                with open('images/main_menu_img.jpg', 'rb') as file:
                    main_menu_photo = file.read()
                self.bot.send_photo(chat_id=message.chat.id,
                                    photo=main_menu_photo,
                                    caption=self.hello_message,
                                    reply_markup=keyboard.menu(self, message.chat.id))
            elif message.text == '–ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É':
                msg = self.bot.send_message(chat_id=message.chat.id,
                                            text='–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:',
                                            reply_markup=keyboard.back())
                self.bot.register_next_step_handler(msg, faq_message)
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                    text='–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!',
                                    reply_markup=keyboard.faq())
                self.bot.register_next_step_handler(msg, faq)


        def faq_message(message):
            if message.text == '<< –ù–∞–∑–∞–¥':
                msg = self.bot.send_message(chat_id=message.chat.id,
                                        text='–ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω—É—é —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã 24/7 –∏ '
                                        '—Å–ª–µ–¥–∏–º –∑–∞ —Ç–µ–º, —á—Ç–æ–±—ã –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ —Ç–∞–∫ –∂–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ, –∫–∞–∫ –∏ —Ç–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ '
                                        '—Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è (–∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç - –ø–æ—Å—Ç–æ—è–Ω–Ω–æüöÄ)\n\n–ù–æ, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ '
                                        '—Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å - –º—ã –Ω–∞ —Å–≤—è–∑–∏ üì≤',
                                        reply_markup=keyboard.faq())
                self.bot.register_next_step_handler(msg, faq)
            else:
                # Add to db
                self.user_faq_messages[message.chat.id].append([[message.chat.id, message.text], functions.get_today_date()])

                # SAVE
                db_functions.save_all(self)

                # Send to admins
                for admin_id in self.admins:
                    msg_id = len(self.user_faq_messages[message.chat.id]) - 1
                    self.bot.send_message(chat_id=admin_id,
                                        text=f'<b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞):</b>\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{self.user_exists(id=message.chat.id).username}\n–°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}',
                                        parse_mode='HTML',
                                        reply_markup=keyboard.answer_faq(message.chat.id, msg_id))
                        
                self.bot.send_message(chat_id=message.chat.id,
                                    text='–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!\n'
                                    '–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –í—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç –Ω–∏—Ö –æ—Ç–≤–µ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ.',
                                    reply_markup=keyboard.menu(self, message.chat.id))
        

        def faq_answer(message, user_id, msg_id):
            if message.text == '<< –ù–∞–∑–∞–¥':
                with open('images/main_menu_img.jpg', 'rb') as file:
                    main_menu_photo = file.read()
                self.bot.send_photo(chat_id=message.chat.id,
                                    photo=main_menu_photo,
                                    caption=self.hello_message,
                                    reply_markup=keyboard.menu(self, message.chat.id))
            else:
                question_message = self.user_faq_messages[user_id].pop(msg_id)
                self.bot.send_message(chat_id=user_id,
                                    text=f'<b>–í–∞—à –≤–æ–ø—Ä–æ—Å:</b>\n{question_message[0][1]}\n<b>–û—Ç–≤–µ—Ç –æ—Ç —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∏:</b>\n{message.text}',
                                    parse_mode='HTML',
                                    reply_markup=keyboard.menu(self, user_id))
                self.bot.send_message(chat_id=message.chat.id,
                                    text='–í–∞—à –æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!',
                                    reply_markup=keyboard.menu(self, message.chat.id))
                self.bot.clear_step_handler_by_chat_id(user_id)
                self.bot.clear_step_handler_by_chat_id(message.chat.id)

                # SAVE
                db_functions.save_all(self)
            
        
        def know_base(message):
            if message.text == '<< –ù–∞–∑–∞–¥':
                with open('images/main_menu_img.jpg', 'rb') as file:
                    main_menu_photo = file.read()
                self.bot.send_photo(chat_id=message.chat.id,
                                    photo=main_menu_photo,
                                    caption=self.hello_message,
                                    reply_markup=keyboard.menu(self, message.chat.id))
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                    text='–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!',
                                    reply_markup=keyboard.back())
                self.bot.register_next_step_handler(msg, know_base)
        

        def team_control(message):
            if message.text == '<< –ù–∞–∑–∞–¥':
                with open('images/main_menu_img.jpg', 'rb') as file:
                    main_menu_photo = file.read()
                self.bot.send_photo(chat_id=message.chat.id,
                                    photo=main_menu_photo,
                                    caption=self.hello_message,
                                    reply_markup=keyboard.menu(self, message.chat.id))
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                    text='–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!',
                                    reply_markup=keyboard.back())
                self.bot.register_next_step_handler(msg, know_base)


        def start_expert_text(message):
            if message.text == '<< –ù–∞–∑–∞–¥':
                with open('images/main_menu_img.jpg', 'rb') as file:
                    main_menu_photo = file.read()
                self.bot.send_photo(chat_id=message.chat.id,
                                    photo=main_menu_photo,
                                    caption=self.hello_message,
                                    reply_markup=keyboard.menu(self, message.chat.id))
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                    text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç?',
                                    reply_markup=keyboard.yes_no())
                self.bot.register_next_step_handler(msg, start_expert_text_confirm, message.text)
        

        def start_expert_text_confirm(message, expert_text):
            if message.text == '–î–∞':
                cur_user = self.user_exists(id=message.chat.id)

                self.start_expert_text[cur_user.id] = expert_text

                # SAVE
                db_functions.save_all(self)

                self.bot.send_message(chat_id=message.chat.id,
                                    text='–ù–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!',
                                    reply_markup=keyboard.menu(self, message.chat.id))
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                    text='–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞:',
                                    reply_markup=keyboard.none())
                self.bot.register_next_step_handler(msg, start_expert_text)
        

        def text_to_leader_success_verify(message, data):
            user_id = int(data.split()[0])
            client = self.user_exists(id=user_id)
            expert = self.user_exists(id=self.user_exists(id=client.leader).leader)
            
            if message.text == '–î–∞':
                if [client.id, expert.id] in NOW_DIALOGS:
                    NOW_DIALOGS.pop(NOW_DIALOGS.index([client.id, expert.id]))
                elif [expert.id, client.id] in NOW_DIALOGS:
                    NOW_DIALOGS.pop(NOW_DIALOGS.index([expert.id, client.id]))
                client.texted_to_leader = True
                
                # Client
                self.bot.send_message(chat_id=client.id,
                                    text=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –í–∞—à —ç–∫—Å–ø–µ—Ä—Ç @{expert.username} - '
                                    '—É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª, —á—Ç–æ –í—ã —Å–≤—è–∑–∞–ª–∏—Å—å —Å –Ω–∏–º!',
                                    reply_markup=keyboard.menu(self, client.id))
                
                self.bot.send_message(chat_id=client.id,
                                        text='–ù–µ –∑–∞–±—É–¥—å –≤—Å—Ç—É–ø–∏—Ç—å –≤ –Ω–∞—à —á–∞—Ç –≠–∫—Å–ø–µ—Ä—Ç–æ–≤ - https://t.me/+obxJYB0Y7QpiNDdi')

                # Add expert for user
                client.expert = expert.id
                
                if client.game == 1 or client.game == 3:
                    # GAME-1 or START
                    if client.left is None:
                        producer_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                    else:
                        producer_1 = self.user_exists(id=client.left)
                    if client.right is None:
                        producer_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                    else:
                        producer_2 = self.user_exists(id=client.right)
                    if producer_1 == '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        client_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                    else:
                        if producer_1.left is None:
                            client_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_1 = self.user_exists(id=producer_1.left)
                        if producer_1.right is None:
                            client_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_2 = self.user_exists(id=producer_1.right)
                    if producer_2 == '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_3 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        client_4 = '–°–≤–æ–±–æ–¥–Ω–æ'
                    else:
                        if producer_2.left is None:
                            client_3 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_3 = self.user_exists(id=producer_2.left)
                        if producer_2.right is None:
                            client_4 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_4 = self.user_exists(id=producer_2.right)
                    
                    if producer_1 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        producer_1 = f'@{producer_1.username}'
                    if producer_2 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        producer_2 = f'@{producer_2.username}'
                    if client_1 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_1 = f'@{client_1.username}'
                    if client_2 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_2 = f'@{client_2.username}'
                    if client_3 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_3 = f'@{client_3.username}'
                    if client_4 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_4 = f'@{client_4.username}'
                    
                elif client.game == 2:
                    # GAME-2
                    if client.left is None:
                        producer_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                    else:
                        producer_1 = self.user_exists(id=client.left)
                    if client.middle is None:
                        producer_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                    else:
                        producer_2 = self.user_exists(id=client.middle)
                    if client.right is None:
                        producer_3 = '–°–≤–æ–±–æ–¥–Ω–æ'
                    else:
                        producer_3 = self.user_exists(id=client.right)

                    if producer_1 == '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        client_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        client_3 = '–°–≤–æ–±–æ–¥–Ω–æ'
                    else:
                        if producer_1.left is None:
                            client_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_1 = self.user_exists(id=producer_1.left)
                        if producer_1.middle is None:
                            client_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_2 = self.user_exists(id=producer_1.middle)
                        if producer_1.right is None:
                            client_3 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_3 = self.user_exists(id=producer_1.right)

                    if producer_2 == '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_4 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        client_5 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        client_6 = '–°–≤–æ–±–æ–¥–Ω–æ'
                    else:
                        if producer_2.left is None:
                            client_4 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_4 = self.user_exists(id=producer_2.left)
                        if producer_2.middle is None:
                            client_5 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_5 = self.user_exists(id=producer_2.middle)
                        if producer_2.right is None:
                            client_6 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_6 = self.user_exists(id=producer_2.right)

                    if producer_3 == '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_7 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        client_8 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        client_9 = '–°–≤–æ–±–æ–¥–Ω–æ'
                    else:
                        if producer_3.left is None:
                            client_7 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_7 = self.user_exists(id=producer_3.left)
                        if producer_3.middle is None:
                            client_8 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_8 = self.user_exists(id=producer_3.middle)
                        if producer_3.right is None:
                            client_9 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            client_9 = self.user_exists(id=producer_3.right)
                    
                    if producer_1 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        producer_1 = f'@{producer_1.username}'
                    if producer_2 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        producer_2 = f'@{producer_2.username}'
                    if producer_3 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        producer_3 = f'@{producer_3.username}'
                    if client_1 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_1 = f'@{client_1.username}'
                    if client_2 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_2 = f'@{client_2.username}'
                    if client_3 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_3 = f'@{client_3.username}'
                    if client_4 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_4 = f'@{client_4.username}'
                    if client_5 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_5 = f'@{client_5.username}'
                    if client_6 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_6 = f'@{client_6.username}'
                    if client_7 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_7 = f'@{client_7.username}'
                    if client_8 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_8 = f'@{client_8.username}'
                    if client_9 != '–°–≤–æ–±–æ–¥–Ω–æ':
                        client_9 = f'@{client_9.username}'

                self.bot.send_message(chat_id=expert.id,
                                    text='–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞!',
                                    reply_markup=keyboard.menu(self, expert.id))
                
                # SAVE
                db_functions.save_all(self)
            elif message.text == '–ù–µ—Ç':
                self.bot.send_message(chat_id=expert.id,
                                    text='–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞!',
                                    reply_markup=keyboard.menu(self, expert.id))
                try:
                    self.bot.send_message(chat_id=client.id,
                                        text='–≠–∫—Å–ø–µ—Ä—Ç –æ—Ç–∫–ª–æ–Ω–∏–ª –í–∞—à –ø–æ–¥–∞—Ä–æ–∫, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∏–º –µ—â–µ —Ä–∞–∑ –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏–π –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤:',
                                        reply_markup=keyboard.text_to_leader(expert.id, False))
                except:
                    pass
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                    text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –í–∞—à–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                                    reply_markup=keyboard.yes_no())
                self.bot.register_next_step_handler(msg, text_to_leader_success_verify, data)


        def my_account(message):
            if message.text == '<< –ù–∞–∑–∞–¥':
                with open('images/main_menu_img.jpg', 'rb') as file:
                    main_menu_photo = file.read()
                self.bot.send_photo(chat_id=message.chat.id,
                                    photo=main_menu_photo,
                                    caption=self.hello_message,
                                    reply_markup=keyboard.menu(self, message.chat.id))
            #elif message.text == '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏':
            #    # TO DO
            #    pass
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                    text='–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!',
                                    reply_markup=keyboard.my_account())
                self.bot.register_next_step_handler(msg, my_account)
        

        def game_choice(message):
            cur_user = self.user_exists(id=message.chat.id)

            if message.text == 'GAME-1':
                cur_user.game = 1
            #elif message.text == 'GAME-2':
            #    cur_user.game = 2
            elif message.text == 'START':
               cur_user.game = 3
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                    text='–î–∞–Ω–Ω–æ–π –∏–≥—Ä—ã –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ!',
                                    reply_markup=keyboard.game_list())
                self.bot.register_next_step_handler(msg, game_choice)
                return
                
            if message.text in ['GAME-1', 'GAME-2', 'START']:
                if cur_user.from_user_id is None and cur_user.game != 3:
                    msg = self.bot.send_message(chat_id=message.chat.id,
                                        text='–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å:',
                                        reply_markup=keyboard.level_choice())
                    self.bot.register_next_step_handler(msg, functions.level_choice, self)
                elif cur_user.from_user_id is None and cur_user.game == 3:
                    # START
                    cur_user.texted_to_leader = True

                    # Place-new-user function
                    root_user = self.user_exists(id=self.START_GAME_ROOT)  
                    self.place_new_user_lst[cur_user.id] = [root_user]   
                    cur_user.leader = root_user.id

                    lider = self.user_exists(id=cur_user.leader)
                    with open('images/main_menu_img.jpg', 'rb') as file:
                        main_menu_photo = file.read()
                    self.bot.send_photo(chat_id=message.chat.id,
                                        photo=main_menu_photo,
                                        caption=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã - –≤ –∫–æ–º–∞–Ω–¥–µüëä üî•\n\n¬´–í–µ—Ä—å –≤ —Å–µ–±—è, –¥–∞–∂–µ –µ—Å–ª–∏ '
                                        '–Ω–µ –≤–µ—Ä–∏—Ç –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ¬ª\n\n'
                                        '–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ—á–µ–Ω—å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –ø—É—Ç—å, –±—É–¥—å —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤, '
                                        '—Ç–æ–≥–¥–∞ –Ω–∞—à–∞ –∏–≥—Ä–∞ –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —ç–º–æ—Ü–∏–π, –ø–æ–ª–µ–∑–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤, –∏, '
                                        '–∫–æ–Ω–µ—á–Ω–æ - –º–Ω–æ–≥–æ-–º–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤üòªüéÅ\n\n'
                                        f'P.S. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–∏—Å—å —Å–æ —Å–≤–æ–∏–º –≠–∫—Å–ø–µ—Ä—Ç–æ–º!üòâ - @{lider.username}',
                                        reply_markup=keyboard.menu(self, message.chat.id))
                else:
                    # If user comes NOT for referal-link
                    if cur_user.from_user_id is None:
                        # Place-new-user function
                        root_user = None
                        for user in self.users:
                            if user.cur_level == cur_user.cur_level and user.leader == user.username and \
                                 cur_user != user and user.game == cur_user.game:
                                root_user = user
                                break
                        if root_user is None:
                            root_user = self.users[0]    

                        self.place_new_user_lst[cur_user.id] = [root_user]   
                        self.place_new_user(new_user=self.user_exists(message.chat.id))

                        lider = self.user_exists(id=self.user_exists(id=cur_user.leader).leader)
                        if cur_user.game == 1 or cur_user.game == 2:
                            # GAME-1 or GAME-2
                            self.bot.send_message(chat_id=message.chat.id,
                                                text=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã - –≤ –∫–æ–º–∞–Ω–¥–µüëä üî•\n\n¬´–í–µ—Ä—å –≤ —Å–µ–±—è, –¥–∞–∂–µ –µ—Å–ª–∏ '
                                                '–Ω–µ –≤–µ—Ä–∏—Ç –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ¬ª\n\n'
                                                '–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ—á–µ–Ω—å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –ø—É—Ç—å, –±—É–¥—å —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤, '
                                                '—Ç–æ–≥–¥–∞ –Ω–∞—à–∞ –∏–≥—Ä–∞ –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —ç–º–æ—Ü–∏–π, –ø–æ–ª–µ–∑–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤, –∏, '
                                                '–∫–æ–Ω–µ—á–Ω–æ - –º–Ω–æ–≥–æ-–º–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤üòªüéÅ\n\n'
                                                f'P.S. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–∏—Å—å —Å–æ —Å–≤–æ–∏–º –≠–∫—Å–ø–µ—Ä—Ç–æ–º!üòâ - @{lider.username}',
                                                reply_markup=keyboard.text_to_leader(lider.id))
                        elif cur_user.game == 3:
                            # START
                            cur_user.texted_to_leader = True

                            lider = self.user_exists(id=self.user_exists(id=cur_user.leader).leader)
                            with open('images/main_menu_img.jpg', 'rb') as file:
                                main_menu_photo = file.read()
                            self.bot.send_photo(chat_id=message.chat.id,
                                                photo=main_menu_photo,
                                                caption=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã - –≤ –∫–æ–º–∞–Ω–¥–µüëä üî•\n\n¬´–í–µ—Ä—å –≤ —Å–µ–±—è, –¥–∞–∂–µ –µ—Å–ª–∏ '
                                                '–Ω–µ –≤–µ—Ä–∏—Ç –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ¬ª\n\n'
                                                '–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ—á–µ–Ω—å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –ø—É—Ç—å, –±—É–¥—å —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤, '
                                                '—Ç–æ–≥–¥–∞ –Ω–∞—à–∞ –∏–≥—Ä–∞ –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —ç–º–æ—Ü–∏–π, –ø–æ–ª–µ–∑–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤, –∏, '
                                                '–∫–æ–Ω–µ—á–Ω–æ - –º–Ω–æ–≥–æ-–º–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤üòªüéÅ\n\n'
                                                f'P.S. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–∏—Å—å —Å–æ —Å–≤–æ–∏–º –≠–∫—Å–ø–µ—Ä—Ç–æ–º!üòâ - @{lider.username}',
                                                reply_markup=keyboard.menu(self, message.chat.id))
                    else:
                        self.bot.send_message(chat_id=message.chat.id,
                                            text=f'–¢–≤–æ–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å - @{self.user_exists(id=cur_user.from_user_id).username}',
                                            reply_markup=keyboard.none())
                        
                        cur_user = self.user_exists(id=message.chat.id)
                        from_user = self.user_exists(id=cur_user.from_user_id)

                        if from_user.left is not None and from_user.right is not None:
                            msg = self.bot.send_message(chat_id=message.chat.id,
                                                text=f'–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∫–æ–º–∞–Ω–¥—É '
                                                f'–∫ @{from_user.username}, —Ç–∞–∫ –∫–∞–∫ —É –Ω–µ–≥–æ –Ω–µ—Ç –º–µ—Å—Ç',
                                                reply_markup=keyboard.full_choose_group())
                            self.bot.register_next_step_handler(msg, functions.full_choose_group, self)
                        else:
                            if from_user.left is None:
                                from_user.left = message.chat.id
                            else:
                                from_user.right = message.chat.id
                            
                            # if 'system' in from_user.username:
                            #     cur_user.leader = self.user_exists(id=from_user.username).id
                            # else:

                            cur_user.leader = self.user_exists(id=from_user.id).id   
                            lider = self.user_exists(id=self.user_exists(id=cur_user.leader).leader)
    
                            if cur_user.game == 1 or cur_user.game == 2 or \
                                (cur_user.game == 3 and from_user.id in self.system_accounts):
                                # GAME-1 or GAME-2                   
                                self.bot.send_message(chat_id=message.chat.id,
                                                    text=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã - –≤ –∫–æ–º–∞–Ω–¥–µüëä üî•\n\n¬´–í–µ—Ä—å –≤ —Å–µ–±—è, –¥–∞–∂–µ –µ—Å–ª–∏ '
                                                    '–Ω–µ –≤–µ—Ä–∏—Ç –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ¬ª\n\n'
                                                    '–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ—á–µ–Ω—å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –ø—É—Ç—å, –±—É–¥—å —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤, '
                                                    '—Ç–æ–≥–¥–∞ –Ω–∞—à–∞ –∏–≥—Ä–∞ –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —ç–º–æ—Ü–∏–π, –ø–æ–ª–µ–∑–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤, –∏, '
                                                    '–∫–æ–Ω–µ—á–Ω–æ - –º–Ω–æ–≥–æ-–º–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤üòªüéÅ\n\n'
                                                    f'P.S. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–∏—Å—å —Å–æ —Å–≤–æ–∏–º –≠–∫—Å–ø–µ—Ä—Ç–æ–º!üòâ - @{lider.username}\n',
                                                    reply_markup=keyboard.text_to_leader(lider.id))
                            elif cur_user.game == 3:
                                # START
                                with open('images/main_menu_img.jpg', 'rb') as file:
                                    main_menu_photo = file.read()
                                self.bot.send_photo(chat_id=message.chat.id,
                                                    photo=main_menu_photo,
                                                    caption=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã - –≤ –∫–æ–º–∞–Ω–¥–µüëä üî•\n\n¬´–í–µ—Ä—å –≤ —Å–µ–±—è, –¥–∞–∂–µ –µ—Å–ª–∏ '
                                                    '–Ω–µ –≤–µ—Ä–∏—Ç –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ¬ª\n\n'
                                                    '–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ—á–µ–Ω—å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –ø—É—Ç—å, –±—É–¥—å —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤, '
                                                    '—Ç–æ–≥–¥–∞ –Ω–∞—à–∞ –∏–≥—Ä–∞ –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —ç–º–æ—Ü–∏–π, –ø–æ–ª–µ–∑–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤, –∏, '
                                                    '–∫–æ–Ω–µ—á–Ω–æ - –º–Ω–æ–≥–æ-–º–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤üòªüéÅ\n\n'
                                                    f'P.S. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–∏—Å—å —Å–æ —Å–≤–æ–∏–º –≠–∫—Å–ø–µ—Ä—Ç–æ–º!üòâ - @{lider.username}\n',
                                                    reply_markup=keyboard.menu(self, message.chat.id))
            # SAVE
            db_functions.save_all(self)


        def is_eighteen(message):
            if message.text == '–ù–µ—Ç':
                self.bot.send_message(chat_id=message.chat.id,
                                    text='–ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ª–∏—Ü–∞–º —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç',
                                    reply_markup=keyboard.none())
            elif message.text == '–î–∞':
                cur_user = self.user_exists(id=message.chat.id)
                cur_user.is_eighteen = True

                # SAVE
                db_functions.save_all(self)

                self.bot.send_message(chat_id=message.chat.id,
                                    text='–£—Å–ø–µ—à–Ω–æ!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
                                    reply_markup=keyboard.none())

                self.bot.send_message(chat_id=message.chat.id,
                                        text='–ü–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ ‚§µÔ∏è\nhttps://telegra.ph/Polzovatelskoe-soglashenie-i-politika-konfidencialnosti-08-20',
                                        reply_markup=keyboard.privacy_accept())
            else:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                    text='–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!\n–ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ª–∏—Ü–∞–º —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç!',
                                    reply_markup=keyboard.yes_no())
                self.bot.register_next_step_handler(msg, is_eighteen)

# -------------------------------------------------------------------------------------------------


# Message handler ---------------------------------------------------------------------------------

        @self.bot.message_handler(content_types=['text'])
        def message_handler(message):
            # If not registered user
            if not self.user_exists(id=message.chat.id):
                self.users.append(User(id=message.chat.id))

            cur_user = self.user_exists(id=message.chat.id)

            # Add username
            if cur_user.username is None:
                cur_user.username = message.from_user.username

            if not cur_user.is_eighteen:
                msg = self.bot.send_message(chat_id=message.chat.id,
                                        text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –í–∞–º –µ—Å—Ç—å 18 –ª–µ—Ç:',
                                        reply_markup=keyboard.yes_no())
                    
                self.bot.register_next_step_handler(msg, is_eighteen)
            elif not cur_user.privacy_accept:
                self.bot.send_message(chat_id=message.chat.id,
                                        text='–ü–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ ‚§µÔ∏è\nhttps://telegra.ph/Polzovatelskoe-soglashenie-i-politika-konfidencialnosti-08-20',
                                        reply_markup=keyboard.privacy_accept())
            else:
                # For registered users
                if message.text == '–ù–∞—á–∞—Ç—å':
                    with open('images/main_menu_img.jpg', 'rb') as file:
                        main_menu_photo = file.read()
                    self.bot.send_photo(chat_id=message.chat.id,
                                        photo=main_menu_photo,
                                        caption=self.hello_message,
                                        reply_markup=keyboard.menu(self, message.chat.id))
                elif message.text == '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å' and (cur_user.phone is None or cur_user.username is None):
                    msg = self.bot.send_message(chat_id=message.chat.id,
                                        text='–ò–≥—Ä–æ–∫, –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ üìá (–æ–±–µ—â–∞–µ–º, —á—Ç–æ —Ç—Ä–µ–≤–æ–∂–∏—Ç—å –Ω–µ –±—É–¥–µ–º) ',
                                        reply_markup=keyboard.get_user_data())
                    self.bot.register_next_step_handler(msg, request_contacts)
                elif message.text == 'üí° –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π':
                    # if not cur_user.texted_to_leader:
                    #     self.bot.send_message(chat_id=message.chat.id,
                    #                         text='–í—ã –Ω–µ —Å–≤—è–∑–∞–ª–∏—Å—å —Å –í–∞—à–∏–º –ª–∏–¥–µ—Ä–æ–º, –∏–ª–∏ –í–∞—à –ª–∏–¥–µ—Ä –µ—â–µ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –í–∞—à—É —Å–≤—è–∑—å!\n–í–∞–º –ø–æ–∫–∞ –∑–∞–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø –≤ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª!',
                    #                         reply_markup=keyboard.menu(self, message.chat.id))
                    # else:
                    with open('images/knowbase_img.jpg', 'rb') as file:
                        know_base_photo = file.read()
                    self.bot.send_photo(chat_id=message.chat.id,
                                        photo=know_base_photo,
                                        reply_markup=keyboard.back())
                    msg = self.bot.send_message(chat_id=message.chat.id,
                                        text='1. –ö–∞–∫ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —á.1\n\n'
                                            '–ö–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å?ü§î\n'
                                            '‚§µÔ∏è –ü–µ—Ä–≤—ã–π —Ä–æ–ª–∏–∫ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞, –ø–æ—Å–≤—è—â—ë–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é —Å–ø–∏—Å–∫–∞ '
                                            '–∞—É–¥–∏—Ç–æ—Ä–∏–∏ (—Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–æ–¥–∏–º –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É!)\n'
                                            'https://youtu.be/kiULdTSE7g0',
                                        reply_markup=keyboard.know_base_test(False, 0, len(self.base_texts)))
                    self.bot.register_next_step_handler(msg, know_base)
                elif message.text == '–û–± –∏–≥—Ä–µ üé≤':
                    with open('images/aboutgame_img.jpg', 'rb') as file:
                        about_game_photo = file.read()
                    self.bot.send_photo(chat_id=message.chat.id,
                                        caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:',
                                        photo=about_game_photo,
                                        reply_markup=keyboard.about_game())
                elif message.text == 'üéÅ KVŒõDRIX GAME üéÅ':
                    if cur_user.game == 1 or cur_user.game == 3:
                        # GAME-1 or START
                        if cur_user.left is None:
                            producer_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            producer_1 = self.user_exists(id=cur_user.left)
                        if cur_user.right is None:
                            producer_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            producer_2 = self.user_exists(id=cur_user.right)
                        if producer_1 == '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            client_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            if producer_1.left is None:
                                client_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_1 = self.user_exists(id=producer_1.left)
                            if producer_1.right is None:
                                client_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_2 = self.user_exists(id=producer_1.right)
                        if producer_2 == '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_3 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            client_4 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            if producer_2.left is None:
                                client_3 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_3 = self.user_exists(id=producer_2.left)
                            if producer_2.right is None:
                                client_4 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_4 = self.user_exists(id=producer_2.right)
                        
                        if producer_1 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            producer_1 = f'@{producer_1.username}'
                        if producer_2 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            producer_2 = f'@{producer_2.username}'
                        if client_1 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_1 = f'@{client_1.username}'
                        if client_2 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_2 = f'@{client_2.username}'
                        if client_3 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_3 = f'@{client_3.username}'
                        if client_4 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_4 = f'@{client_4.username}'
                        
                        with open('images/game_img.jpg', 'rb') as file:
                            game_photo = file.read() 
                        msg = self.bot.send_photo(chat_id=message.chat.id,
                                            photo=game_photo,
                                            caption=f'‚öúÔ∏è–¢–≤–æ–π —Å—Ç–∞—Ç—É—Å - –≠–∫—Å–ø–µ—Ä—Ç‚öúÔ∏è\n\nüîµ–ü—Ä–æ–¥—é—Å–µ—Ä 1 - {producer_1}\n'
                                            f'üîµ–ü—Ä–æ–¥—é—Å–µ—Ä 2 - {producer_2}\n\nüü¢–ö–ª–∏–µ–Ω—Ç 1 - {client_1}\n'
                                            f'üü¢–ö–ª–∏–µ–Ω—Ç 2 - {client_2}\nüü¢–ö–ª–∏–µ–Ω—Ç 3 - {client_3}\nüü¢–ö–ª–∏–µ–Ω—Ç 4 - {client_4}',
                                            reply_markup=keyboard.menu(self, message.chat.id))
                    elif cur_user.game == 2:
                        # GAME-2 
                        if cur_user.left is None:
                            producer_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            producer_1 = self.user_exists(id=cur_user.left)
                        if cur_user.middle is None:
                            producer_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            producer_2 = self.user_exists(id=cur_user.middle)
                        if cur_user.right is None:
                            producer_3 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            producer_3 = self.user_exists(id=cur_user.right)

                        if producer_1 == '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            client_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            client_3 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            if producer_1.left is None:
                                client_1 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_1 = self.user_exists(id=producer_1.left)
                            if producer_1.middle is None:
                                client_2 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_2 = self.user_exists(id=producer_1.middle)
                            if producer_1.right is None:
                                client_3 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_3 = self.user_exists(id=producer_1.right)

                        if producer_2 == '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_4 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            client_5 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            client_6 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            if producer_2.left is None:
                                client_4 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_4 = self.user_exists(id=producer_2.left)
                            if producer_2.middle is None:
                                client_5 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_5 = self.user_exists(id=producer_2.middle)
                            if producer_2.right is None:
                                client_6 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_6 = self.user_exists(id=producer_2.right)

                        if producer_3 == '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_7 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            client_8 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            client_9 = '–°–≤–æ–±–æ–¥–Ω–æ'
                        else:
                            if producer_3.left is None:
                                client_7 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_7 = self.user_exists(id=producer_3.left)
                            if producer_3.middle is None:
                                client_8 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_8 = self.user_exists(id=producer_3.middle)
                            if producer_3.right is None:
                                client_9 = '–°–≤–æ–±–æ–¥–Ω–æ'
                            else:
                                client_9 = self.user_exists(id=producer_3.right)
                        
                        if producer_1 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            producer_1 = f'@{producer_1.username}'
                        if producer_2 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            producer_2 = f'@{producer_2.username}'
                        if producer_3 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            producer_3 = f'@{producer_3.username}'
                        if client_1 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_1 = f'@{client_1.username}'
                        if client_2 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_2 = f'@{client_2.username}'
                        if client_3 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_3 = f'@{client_3.username}'
                        if client_4 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_4 = f'@{client_4.username}'
                        if client_5 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_5 = f'@{client_5.username}'
                        if client_6 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_6 = f'@{client_6.username}'
                        if client_7 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_7 = f'@{client_7.username}'
                        if client_8 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_8 = f'@{client_8.username}'
                        if client_9 != '–°–≤–æ–±–æ–¥–Ω–æ':
                            client_9 = f'@{client_9.username}'
                        
                        with open('images/game_img.jpg', 'rb') as file:
                            game_photo = file.read() 
                        self.bot.send_photo(chat_id=cur_user.id,
                                            photo=game_photo,
                                            caption=f'‚öúÔ∏è–¢–≤–æ–π —Å—Ç–∞—Ç—É—Å - –≠–∫—Å–ø–µ—Ä—Ç‚öúÔ∏è\n\nüîµ–ü—Ä–æ–¥—é—Å–µ—Ä-1 - {producer_1}\n'
                                            f'üîµ–ü—Ä–æ–¥—é—Å–µ—Ä-2 - {producer_2}\n–ü—Ä–æ–¥—é—Å–µ—Ä-3 - {producer_3}\n\nüü¢–ö–ª–∏–µ–Ω—Ç-1 - {client_1}\n'
                                            f'üü¢–ö–ª–∏–µ–Ω—Ç-2 - {client_2}\nüü¢–ö–ª–∏–µ–Ω—Ç-3 - {client_3}\nüü¢–ö–ª–∏–µ–Ω—Ç-4 - {client_4}\n–ö–ª–∏–µ–Ω—Ç-5 - {client_5}\n'
                                            f'–ö–ª–∏–µ–Ω—Ç-6 - {client_6}\n–ö–ª–∏–µ–Ω—Ç-7 - {client_7}\n–ö–ª–∏–µ–Ω—Ç-8 - {client_8}\n–ö–ª–∏–µ–Ω—Ç-9 - {client_9}',
                                            reply_markup=keyboard.menu(self, cur_user.id))
                    # self.bot.register_next_step_handler(msg, start_game)
                elif message.text == '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π':
                    cur_user = self.user_exists(id=message.chat.id)
                    if cur_user.left is not None or cur_user.right is not None:
                        self.bot.send_message(chat_id=message.chat.id,
                                            text='... –ü–µ—Ä–µ—Ö–æ–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–æ–º–∞–Ω–¥–æ–π ...',
                                            reply_markup=keyboard.back())
                        msg = self.bot.send_message(chat_id=message.chat.id,
                                            text='–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—é—Å–µ—Ä–æ–≤ –Ω–∞ –í–∞—à–µ–º —É—Ä–æ–≤–Ω–µ:',
                                            reply_markup=keyboard.team_control(self, message.chat.id))
                        self.bot.register_next_step_handler(msg, team_control)
                    else:
                        self.bot.send_message(chat_id=message.chat.id,
                                            text='–£ –í–∞—Å –µ—â–µ –Ω–µ—Ç –ø—Ä–æ–¥—é—Å–µ—Ä–æ–≤ –Ω–∞ –í–∞—à–µ–º —É—Ä–æ–≤–Ω–µ!',
                                            reply_markup=keyboard.menu(self, message.chat.id))
                elif message.text == '‚öôÔ∏è –¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞':
                    with open('images/faq_img.jpg', 'rb') as file:
                        faq_photo = file.read()
                    msg = self.bot.send_photo(chat_id=message.chat.id,
                                        photo=faq_photo,
                                        caption='–ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω—É—é —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã 24/7 –∏ —Å–ª–µ–¥–∏–º –∑–∞ —Ç–µ–º, —á—Ç–æ–±—ã –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ —Ç–∞–∫ –∂–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ, –∫–∞–∫ –∏ —Ç–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ —Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è (–∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç - –ø–æ—Å—Ç–æ—è–Ω–Ω–æüöÄ)\n\n–ù–æ, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å - –º—ã –Ω–∞ —Å–≤—è–∑–∏ üì≤',
                                        reply_markup=keyboard.faq())
                    self.bot.register_next_step_handler(msg, faq)
                elif message.text == '–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ üï∏':
                    with open('images/ref_link_img.jpg', 'rb') as file:
                        ref_link_photo = file.read()
                    if cur_user.ref_link is None:
                        self.bot.send_photo(chat_id=message.chat.id,
                                            photo=ref_link_photo,
                                            caption='¬´–ï—Å–ª–∏ –Ω–∞—Ä–æ–¥ –µ–¥–∏–Ω - –æ–Ω –Ω–µ–ø–æ–±–µ–¥–∏–º!¬ªüèÜ\n\nüíé –¢—ã –º–æ–∂–µ—à—å –∂–¥–∞—Ç—å, –ø–æ–∫–∞ –≤—ã–π–¥–µ—Ç –Ω–∞—à –ø—Ä–æ–¥—É–∫—Ç –∏ –ø—Ä–µ–¥–≤–∫—É—à–∞—Ç—å –µ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏–µ, –∞ –º–æ–∂–µ—à—å - –Ω–∞—á–∞—Ç—å —Å—Ç—Ä–æ–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–∞—Ä–∫–∏, –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ –æ–∫—É–ø–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ üéÅ\n\n‚§µÔ∏è –û—Ç–ø—Ä–∞–≤—å –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é —Å—Å—ã–ª–∫—É —Å–≤–æ–µ–º—É –¥—Ä—É–≥—É –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –≤–º–µ—Å—Ç–µ —ç—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ',
                                            reply_markup=keyboard.get_referal_link(message.chat.id))
                    else:
                        self.bot.send_photo(chat_id=message.chat.id,
                                            photo=ref_link_photo,                                            
                                            caption=f'–í–∞—à–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ –≥–æ—Ç–æ–≤–∞ ‚úÖ\n\n{cur_user.ref_link}',
                                            reply_markup=keyboard.menu(self, message.chat.id))
                    # SAVE
                    db_functions.save_all(self)
                elif message.text == '–°–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)':
                    if not self.faq_msgs_exist():
                        self.bot.send_message(chat_id=message.chat.id,
                                            text='–ù–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É')
                    else:
                        for user_id in self.user_faq_messages:
                            for faq_msg_i in range(len(self.user_faq_messages[user_id])):
                                faq_msg = self.user_faq_messages[user_id][faq_msg_i]
                                self.bot.send_message(chat_id=message.chat.id,
                                                    text=f'<b>{faq_msg[1]}</b>\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{self.user_exists(id=faq_msg[0][0]).username}\n–°–æ–æ–±—â–µ–Ω–∏–µ: {faq_msg[0][1]}',
                                                    parse_mode='HTML',
                                                    reply_markup=keyboard.answer_faq(user_id, faq_msg_i))
                elif message.text == 'üí≥ –ú–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã üí≥':
                    if cur_user.id not in self.start_expert_text:
                        msg = self.bot.send_message(chat_id=message.chat.id,
                                            text='–£ –í–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤!\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞:',
                                            reply_markup=keyboard.back())
                    else: 
                        msg = self.bot.send_message(chat_id=message.chat.id,
                                                text=f'–ü—Ä–µ–¥—ã–¥—É—â–∏–π –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞: <b>{self.start_expert_text[cur_user.id]}</b>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞:',
                                                parse_mode='HTML',
                                                reply_markup=keyboard.back())
                    self.bot.register_next_step_handler(msg, start_expert_text)
                elif message.text == 'üëë –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç üëë':
                    command_players_cnt = self.get_command_players_cnt(cur_user)
                    levels_player_cnt = self.get_levels_player_cnt()

                    if cur_user.leader is None:
                        cur_game_expert = None
                    else:
                        cur_game_expert = self.user_exists(id=self.user_exists(id=cur_user.leader).leader).username

                    if cur_user.expert is None:
                        cur_level_expert = None
                    else:
                        cur_level_expert = self.user_exists(id=cur_user.expert).username
                    
                    if cur_user.from_user_id is None:
                        cur_game_inviter = cur_game_expert
                    else:
                        cur_game_inviter = self.user_exists(id=cur_user.from_user_id).username
                    
                    with open('images/my_acc_img.jpg', 'rb') as file:
                        my_acc_photo = file.read()
                    msg = self.bot.send_photo(chat_id=message.chat.id,
                                        photo=my_acc_photo,
                                        caption='üëë –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç üëë\n\n' 

                                            f'<b>–õ–æ–≥–∏–Ω:</b> {cur_user.username}\n'
                                            f'<b>ID:</b> {cur_user.id}\n'
                                            f'<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {cur_user.phone}\n\n'

                                            f'–¢–≤–æ–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å –≤ –∏–≥—Ä—É: <b>@{cur_game_inviter}</b>\n'.replace('@None', '---')+
                                            f'–¢–≤–æ–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å –Ω–∞ —Ç–µ–∫—É—â–µ–º —É—Ä–æ–≤–Ω–µ: <b>@{cur_level_expert}</b>\n\n'.replace('@None', '---')+

                                            f'–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–∞ —Å—É–º–º—É: <b>{cur_user.send_gift_sum}</b>\n'
                                            f'–ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–∞ —Å—É–º–º—É: <b>{cur_user.get_gift_sum}</b>\n\n' 

                                            f'–í—Å–µ–≥–æ –≤ –∫–æ–º–∞–Ω–¥–µ: {command_players_cnt} –∏–≥—Ä–æ–∫–æ–≤\n' 
                                            f'–õ–∏—á–Ω–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö: {cur_user.refs_cnt} –∏–≥—Ä–æ–∫–æ–≤\n' 
                                            f'–ò–≥—Ä–æ–∫–æ–≤ –Ω–∞ 1 —É—Ä–æ–≤–Ω–µ: {levels_player_cnt[1]}\n' 
                                            f'–ò–≥—Ä–æ–∫–æ–≤ –Ω–∞ 2 —É—Ä–æ–≤–Ω–µ: {levels_player_cnt[2]}\n' 
                                            f'–ò–≥—Ä–æ–∫–æ–≤ –Ω–∞ 3 —É—Ä–æ–≤–Ω–µ: {levels_player_cnt[3]}\n'
                                            f'–ò–≥—Ä–æ–∫–æ–≤ –Ω–∞ 4 —É—Ä–æ–≤–Ω–µ: {levels_player_cnt[4]}\n\n'
                                            
                                            '–ü—Ä–æ–π–¥–µ–Ω–æ —É—Ä–æ–≤–Ω–µ–π:\n' 
                                            f'1 —É—Ä–æ–≤–µ–Ω—å: {cur_user.levels[1]}\n' 
                                            f'2 —É—Ä–æ–≤–µ–Ω—å: {cur_user.levels[2]}\n'
                                            f'3 —É—Ä–æ–≤–µ–Ω—å: {cur_user.levels[3]}\n' 
                                            f'4 —É—Ä–æ–≤–µ–Ω—å: {cur_user.levels[4]}\n',
                                            parse_mode='HTML',
                                            reply_markup=keyboard.my_account())
                    self.bot.register_next_step_handler(msg, my_account)
                elif not cur_user.texted_to_leader:
                    lider = self.user_exists(id=self.user_exists(id=cur_user.leader).leader)
                    if cur_user.game == 1 or cur_user.game == 2:
                        # GAME-1 or GAME-2
                        self.bot.send_message(chat_id=message.chat.id,
                                            text=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã - –≤ –∫–æ–º–∞–Ω–¥–µüëä üî•\n\n¬´–í–µ—Ä—å –≤ —Å–µ–±—è, –¥–∞–∂–µ –µ—Å–ª–∏ '
                                            '–Ω–µ –≤–µ—Ä–∏—Ç –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ¬ª\n\n'
                                            '–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ—á–µ–Ω—å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –ø—É—Ç—å, –±—É–¥—å —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤, '
                                            '—Ç–æ–≥–¥–∞ –Ω–∞—à–∞ –∏–≥—Ä–∞ –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —ç–º–æ—Ü–∏–π, –ø–æ–ª–µ–∑–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤, –∏, '
                                            '–∫–æ–Ω–µ—á–Ω–æ - –º–Ω–æ–≥–æ-–º–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤üòªüéÅ\n\n'
                                            f'P.S. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–∏—Å—å —Å–æ —Å–≤–æ–∏–º –≠–∫—Å–ø–µ—Ä—Ç–æ–º!üòâ - @{lider.username}\n',
                                            reply_markup=keyboard.text_to_leader(lider.id))
                    elif cur_user.game == 3:
                        # START
                        lider = self.user_exists(id=self.user_exists(id=cur_user.leader).leader)
                        with open('images/main_menu_img.jpg', 'rb') as file:
                            main_menu_photo = file.read()
                        self.bot.send_photo(chat_id=message.chat.id,
                                            photo=main_menu_photo,
                                            caption=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã - –≤ –∫–æ–º–∞–Ω–¥–µüëä üî•\n\n¬´–í–µ—Ä—å –≤ —Å–µ–±—è, –¥–∞–∂–µ –µ—Å–ª–∏ '
                                            '–Ω–µ –≤–µ—Ä–∏—Ç –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ¬ª\n\n'
                                            '–¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ—á–µ–Ω—å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –ø—É—Ç—å, –±—É–¥—å —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤, '
                                            '—Ç–æ–≥–¥–∞ –Ω–∞—à–∞ –∏–≥—Ä–∞ –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —ç–º–æ—Ü–∏–π, –ø–æ–ª–µ–∑–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤, –∏, '
                                            '–∫–æ–Ω–µ—á–Ω–æ - –º–Ω–æ–≥–æ-–º–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤üòªüéÅ\n\n'
                                            f'P.S. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–∏—Å—å —Å–æ —Å–≤–æ–∏–º –≠–∫—Å–ø–µ—Ä—Ç–æ–º!üòâ - @{lider.username}',
                                            reply_markup=keyboard.menu(self, message.chat.id))
                else:
                    self.bot.send_message(chat_id=message.chat.id,
                                            text='–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!',
                                            reply_markup=keyboard.menu(self, message.chat.id))
                

        self.bot.infinity_polling()

# -------------------------------------------------------------------------------------------------


def main():
    bot = Bot()
    threading.Thread(target=logger.main).start()
    threading.Thread(target=bot.start).start()
    threading.Thread(target=functions.check_structure_loop, args=(bot, )).start()


if __name__ == '__main__':
    main()

